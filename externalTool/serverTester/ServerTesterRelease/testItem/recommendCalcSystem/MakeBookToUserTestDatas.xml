<?xml version="1.0" encoding="UTF-8"?>
<root>
    <description>
        <group>RecommendCalcSystem</group>
        <title>테스트 데이터 생성: UpdateRecommendBookToUser</title>
        <help>UpdateRecommendBookToUser 엔드포인트를 테스트하기 위한 다량의 데이터를 생성합니다.</help>
    </description>

    <tests>
        <test>
            <title>통신 확인(SanityCheck)</title>
            <help>CollectedData 서비스에 sanityCheck 요청을 보냅니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck</resourceUrl>
            <headers></headers>
            <data></data>

            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>Book 1: Mock EmptyBookCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 EmptyBookCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/EmptyBookCreated</resourceUrl>
            <headers></headers>
            <data>{"id":1,"createrId":2,"coverImageFileId":1,"title":"Book 1","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 1-1: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":1,"bookId":1,"name":"Apple","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 1-2: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":2,"bookId":1,"name":"Banana","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 1-3: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":3,"bookId":1,"name":"Candy","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>Book 2: Mock EmptyBookCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 EmptyBookCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/EmptyBookCreated</resourceUrl>
            <headers></headers>
            <data>{"id":2,"createrId":3,"coverImageFileId":2,"title":"Book 2","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 2-1: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":4,"bookId":2,"name":"Banana","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 2-2: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":5,"bookId":2,"name":"Candy","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 2-3: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":6,"bookId":2,"name":"Description","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>Book 3: Mock EmptyBookCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 EmptyBookCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/EmptyBookCreated</resourceUrl>
            <headers></headers>
            <data>{"id":3,"createrId":4,"coverImageFileId":3,"title":"Book 3","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 3-1: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":7,"bookId":3,"name":"Elastic","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 3-2: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":8,"bookId":3,"name":"Flask","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 3-3: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":9,"bookId":3,"name":"Google","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>Book 4: Mock EmptyBookCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 EmptyBookCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/EmptyBookCreated</resourceUrl>
            <headers></headers>
            <data>{"id":4,"createrId":5,"coverImageFileId":4,"title":"Book 4","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 4-1: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":10,"bookId":4,"name":"Apple","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 4-2: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":11,"bookId":4,"name":"Banana","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 4-3: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":12,"bookId":4,"name":"Candy","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>Book 5: Mock EmptyBookCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 EmptyBookCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/EmptyBookCreated</resourceUrl>
            <headers></headers>
            <data>{"id":5,"createrId":6,"coverImageFileId":5,"title":"Book 5","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 5-1: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":13,"bookId":5,"name":"Elastic","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 5-2: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":14,"bookId":5,"name":"Flask","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Book 5-3: Mock TagCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 TagCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/TagCreated</resourceUrl>
            <headers></headers>
            <data>{"id":15,"bookId":5,"name":"Google","createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>


        <test>
            <title>Like 1: Mock BookLiked 이벤트 생성</title>
            <help>테스트를 위해서 강제로 BookLiked 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/BookLiked</resourceUrl>
            <headers></headers>
            
            <data>{"userId":2, "id":2,"createrId":3,"coverImageFileId":2,"title":"Book 2","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>Like 2: Mock BookLiked 이벤트 생성</title>
            <help>테스트를 위해서 강제로 BookLiked 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/BookLiked</resourceUrl>
            <headers></headers>
            
            <data>{"userId":2, "id":4,"createrId":5,"coverImageFileId":4,"title":"Book 4","isShared":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>


        <test>
            <title>BookShelf 1: Mock BookShelfCreated 이벤트 생성</title>
            <help>테스트를 위해서 강제로 BookShelfCreated 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/BookShelfCreated</resourceUrl>
            <headers></headers>
            <data>{"id":1,"createrId":2,"title":"My Book Shelf","bookCount":1,"isShared":false,"isDeletable":false,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>BookShelfBook 1: Mock BookShelfBookAdded 이벤트 생성</title>
            <help>테스트를 위해서 강제로 BookShelfBookAdded 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/BookShelfBookAdded</resourceUrl>
            <headers></headers>
            <data>{"id":1,"bookShelfId":1,"bookId":2,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>BookShelfBook 2: Mock BookShelfBookAdded 이벤트 생성</title>
            <help>테스트를 위해서 강제로 BookShelfBookAdded 이벤트를 생성합니다.</help>

            <method>POST</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>sanityCheck/mock/BookShelfBookAdded</resourceUrl>
            <headers></headers>
            <data>{"id":2,"bookShelfId":1,"bookId":4,"createdDate":"2024-01-19T13:00:00.000+09:00","updatedDate":"2024-01-19T13:00:00.000+09:00"}</data>
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>



        <test>
            <title>모든 책 목록 얻기(BookAll)</title>
            <help>모든 책 목록을 얻습니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>books</resourceUrl>
            <headers></headers>
            <data></data>
            
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>모든 태그 목록 얻기(TagAll)</title>
            <help>모든 태그 목록을 얻습니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>tags</resourceUrl>
            <headers></headers>
            <data></data>
            
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>모든 책 좋아요 목록 얻기(LikeHistoryAll)</title>
            <help>모든 책 좋아요 목록을 얻습니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>likeHistories</resourceUrl>
            <headers></headers>
            <data></data>
            
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>모든 책장 목록 얻기(BookShelfAll)</title>
            <help>모든 책장 목록을 얻습니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>bookShelfs</resourceUrl>
            <headers></headers>
            <data></data>
            
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>

        <test>
            <title>모든 책장 책 목록 얻기(BookShelfBookAll)</title>
            <help>모든 책장 책 목록을 얻습니다.</help>

            <method>GET</method>
            <baseUrl>http://localhost:8093</baseUrl>
            <resourceUrl>bookShelfBooks</resourceUrl>
            <headers></headers>
            <data></data>
            
            <checks>
                <check type="status">2.*</check>
            </checks>
        </test>
    </tests>
</root>